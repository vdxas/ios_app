workflows:
  # iOS įrenginiui – .app (be pasirašymo)
  ios-workflow:
    name: iOS App (Debug .app)
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      xcode: 16.4
      cocoapods: default
      vars:
        SCHEME: "InvoicerApp"
        CONFIGURATION: "Debug"
    cache:
      cache_paths:
        - ~/.cache/Homebrew
        - ~/Library/Caches/CocoaPods
        - ~/Library/Developer/Xcode/DerivedData
    scripts:
      - name: Show Xcode version & repo layout
        script: |
          set -e
          xcodebuild -version
          echo "--- repo root ---"; pwd; ls -la
          echo "--- InvoicerApp dir ---"; ls -la InvoicerApp || true

      - name: Generate .xcodeproj with XcodeGen
        script: |
          set -e
          brew install xcodegen || true
          xcodegen generate
          ls -la *.xcodeproj

      - name: Clean & build (no code signing)
        script: |
          set -eo pipefail
          xcodebuild \
            -project InvoicerApp.xcodeproj \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            clean build | xcpretty

      - name: Collect .app artifact
        script: |
          set -eo pipefail
          APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -type d -path "*/Build/Products/$CONFIGURATION-iphoneos/${SCHEME}.app" -print -quit)
          echo "Found app at: $APP_PATH"
          ART_DIR="${CM_ARTIFACTS:-$PWD/artifacts}"
          mkdir -p "$ART_DIR"
          cp -R "$APP_PATH" "$ART_DIR/"

    artifacts:
      - "artifacts/*.app"

  # iOS SIMULIATORIUI – App Preview naršyklėje (Stellar)
  ios-simulator-preview:
    name: iOS Simulator (App Preview)
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      xcode: 16.4
      cocoapods: default
      vars:
        SCHEME: "InvoicerApp"
        CONFIGURATION: "Debug"
    cache:
      cache_paths:
        - ~/.cache/Homebrew
        - ~/Library/Caches/CocoaPods
        - ~/Library/Developer/Xcode/DerivedData
    scripts:
      - name: Show Xcode version & repo layout
        script: |
          set -e
          xcodebuild -version
          echo "--- repo root ---"; pwd; ls -la
          echo "--- InvoicerApp dir ---"; ls -la InvoicerApp || true

      - name: Generate .xcodeproj with XcodeGen
        script: |
          set -e
          brew install xcodegen || true
          xcodegen generate
          ls -la *.xcodeproj

      - name: Build for iOS Simulator (.app for App Preview)
        script: |
          set -eo pipefail
          xcodebuild \
            -project InvoicerApp.xcodeproj \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination 'generic/platform=iOS Simulator' \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            clean build | xcpretty

    artifacts:
      - "/Users/builder/Library/Developer/Xcode/DerivedData/**/Build/Products/Debug-iphonesimulator/*.app"

  # Naujas: Android .apk „preview“ (emuliatoriui / atsisiųsti iš artefaktų)
  android:
    name: Android debug workflow
    max_build_duration: 60
    instance_type: mac_mini_m2
    environment:
      java: 17
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.gradle/wrapper
    scripts:
      - name: Set Android SDK location
        script: |
          set -e
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
      - name: Make gradlew executable
        script: |
          set -e
          chmod +x ./gradlew
      - name: Build Android (Debug .apk)
        script: |
          set -e
          ./gradlew assembleDebug
          ./gradlew :app:assembleDebug || true
    artifacts:
      - "app/build/outputs/apk/debug/app-debug.apk"
      - "**/build/outputs/apk/debug/*.apk"
